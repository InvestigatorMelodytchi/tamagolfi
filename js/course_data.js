// Initializing array.
var courseObj = [];

// Template.
var courseTemplate = {
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_default,
	courseLen: 0,
	courseRec: 0,
	
	// Getting wind.
	WindSpeed: function() {return(0);},
	WindDirection: function() {return(0);},
	
	// Array population.
	Populate: function() {
		// Misc.
		this.courseSpr.push(0);
		this.courseData.push(0);
		
		// Hole layouts.
		
		// Obstacles.
		
		// End.
	}
};



/////////////////
// TEST COURSE //
/////////////////
courseObj.push({
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_default,
	courseLen: 0,
	courseRec: 0,
	
	// Getting wind.
	WindSpeed: function() {return(randomMax(10));},
	WindDirection: function() {return(Math.round(randomMax(7) * 45));},
	
	// Array population.
	Populate: function() {
		this.courseSpr.push(spr_course_range);
		this.coursePar.push(5);
		this.courseData.push([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0], [0, 1, 1, 0], [0, 1, 1, 0], [0, 1, 1, 0], [0, 0, 0, 0], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
	}
});
courseObj = [];



////////////////////////////////
// TAMATOWN TAMAGOLFI COMPLEX //
////////////////////////////////
courseObj.push({
	// Array initialization.
	courseSpr: [],
	courseData: [],
	coursePar: [],
	courseObs: [],
	courseMsc: msc_course_default,
	courseLen: 0,
	courseRec: -16,
	
	// Getting wind.
	WindSpeed: function() {return(randomMax(2));},
	WindDirection: function() {return(Math.round(randomMax(3) * 90));},
	
	// Array population.
	Populate: function() {
		// Misc.
		this.courseSpr = spr_course_tamatown;
		this.coursePar.push(3, 4, 5, 4, 4, 3, 5, 6, 6);
		
		// Hole layouts.
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [2, 2, 2, 2], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 1, 0, 1], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [1, 1, 1, 1], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 0, 0, 2], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 1, 1, 2], [2, 2, 2, 2], [1, 2, 2, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 4, 4, 0], [0, 4, 4, 0], [0, 4, 4, 0]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 3, 3, 1], [1, 1, 1, 1], [1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]]);
		this.courseData.push([[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [2, 0, 0, 2], [1, 1, 1, 1], [1, 1, 1, 1], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 2, 2, 0], [0, 0, 0, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [2, 2, 2, 2], [1, 2, 2, 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 1, 1, 1], [1, 3, 3, 1], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 1, 1, 3], [3, 3, 3, 3], [3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [2, 2, 2, 2], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [2, 2, 2, 2], [4, 4, 2, 2], [4, 4, 4, 2], [4, 4, 4, 4], [1, 4, 4, 4], [1, 1, 4, 4]]);
		this.courseData.push([[3, 0, 0, 3], [3, 0, 0, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 3, 3], [3, 3, 3, 3], [0, 0, 3, 3], [0, 0, 3, 3], [1, 1, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [0, 0, 1, 1], [0, 0, 3, 3], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 0, 3, 3], [0, 0, 3, 3], [0, 0, 3, 3], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 0, 0], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [3, 3, 3, 3], [1, 1, 1, 1], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4], [1, 1, 1, 1]]);
		
		// Obstacles.
		this.courseObs.push([], [], []);
		this.courseObs.push([new ObsMushroom(18, 1, 0), new ObsMushroom(18, 2, 0), new ObsMushroom(18, 3, 0), new ObsMushroom(22, 0, 0), new ObsMushroom(22, 1, 0), new ObsMushroom(22, 2, 0), new ObsMushroom(43, 0, 0), new ObsMushroom(43, 1, 0), new ObsMushroom(43, 2, 0), new ObsMushroom(43, 3, 0)]);
		this.courseObs.push([new ObsMushroom(18, 0, 2), new ObsMushroom(18, 1, 2), new ObsMushroom(18, 2, 2), new ObsMushroom(18, 3, 2), new ObsMushroom(22, 1, 2), new ObsMushroom(22, 2, 2), new ObsMushroom(44.5, 0, 1), new ObsMushroom(44.5, 1, 1), new ObsMushroom(44.5, 2, 1), new ObsMushroom(44.5, 3, 1)]);
		this.courseObs.push([new ObsMushroom(18, 1, 2), new ObsMushroom(18, 2, 2), new ObsMushroom(22, 1, 2), new ObsMushroom(22, 2, 2), new ObsMushroom(26, 1, 2), new ObsMushroom(26, 2, 2), new ObsMushroom(30, 1, 2), new ObsMushroom(30, 2, 2), new ObsMushroom(34, 1, 2), new ObsMushroom(34, 2, 2)]);
		this.courseObs.push([new ObsMushroom(18, 0, 0), new ObsMushroom(18, 1, 0), new ObsMushroom(18, 2, 0), new ObsMushroom(18, 3, 0), new ObsMushroom(36, 0, 1), new ObsMushroom(36, 1, 1), new ObsMushroom(36, 2, 1), new ObsMushroom(36, 3, 1), new ObsMushroom(46, 0, 2), new ObsMushroom(46, 3, 2), new ObsMushroom(50, 0, 2), new ObsMushroom(50, 3, 2), new ObsMushroom(54, 0, 2), new ObsMushroom(54, 3, 2), new ObsMushroom(62, 0, 0), new ObsMushroom(62, 3, 0)]);
		this.courseObs.push([new ObsMushroom(20, 0, 2), new ObsMushroom(20, 1, 2), new ObsMushroom(20, 2, 2), new ObsMushroom(20, 3, 2), new ObsMushroom(21, 0, 2), new ObsMushroom(21, 1, 2), new ObsMushroom(21, 2, 2), new ObsMushroom(21, 3, 2), new ObsMushroom(49, 0, 0), new ObsMushroom(49, 3, 0), new ObsMushroom(59, 1, 0), new ObsMushroom(59, 2, 0), new ObsMushroom(78, 0, 1), new ObsMushroom(79, 0, 1), new ObsMushroom(79, 1, 1), new ObsMushroom(78, 0, 1), new ObsMushroom(67, 0, 1), new ObsMushroom(67, 2, 1), new ObsMushroom(68, 1, 1), new ObsMushroom(68, 3, 1), new ObsMushroom(69, 0, 1), new ObsMushroom(69, 2, 1), new ObsMushroom(70, 1, 1), new ObsMushroom(70, 3, 1), new ObsMushroom(71, 0, 1), new ObsMushroom(71, 2, 1), new ObsMushroom(72, 1, 1), new ObsMushroom(72, 3, 1), new ObsMushroom(73, 0, 1), new ObsMushroom(73, 2, 1)]);
		this.courseObs.push([new ObsMushroom(25, 0, 2), new ObsMushroom(25, 1, 2), new ObsMushroom(25, 2, 2), new ObsMushroom(25, 3, 2), new ObsMushroom(38, 0, 1), new ObsMushroom(38, 1, 1), new ObsMushroom(38, 2, 1), new ObsMushroom(38, 3, 1), new ObsMushroom(55, 0, 0), new ObsMushroom(55, 1, 0), new ObsMushroom(59, 0, 2), new ObsMushroom(59, 1, 2), new ObsMushroom(63, 2, 0), new ObsMushroom(63, 3, 0), new ObsMushroom(67, 2, 2), new ObsMushroom(67, 3, 2), new ObsMushroom(88, 0, 1), new ObsMushroom(88, 1, 1), new ObsMushroom(88, 2, 1), new ObsMushroom(88, 3, 1), new ObsMushroom(93, 0, 1), new ObsMushroom(93, 1, 1), new ObsMushroom(93, 2, 1), new ObsMushroom(93, 3, 1)]);
		
		// End.
	}
});



////////////////
// POPULATING //
////////////////
for(i = 0; i < courseObj.length; i++) {
	courseObj[i].Populate();
	courseObj[i].courseLen = courseObj[i].courseData.length;
	/*for(j = 0; j < courseObj[i].courseObs.length; j++) {
		depthSort(courseObj[i].courseObs[j]);
	}*/
}
